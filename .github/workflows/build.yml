name: Build Python Executable

on:
  push:
    branches: [ stable ]

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build and package Linux binary
      run: |
       pyinstaller --clean --onefile main.py --name mcsvdl
        cp LICENSE ./dist/LICENSE
        cd dist
        tar -acf linux.tar mcsvdl LICENSE

    - name: Upload Linux binary
      uses: actions/upload-artifact@v4
      with:
        name: linux.tar
        path: dist/linux.tar
  build-win:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build and package Windows binary
      run: |
        pyinstaller --clean --onefile main.py --name mcsvdl.exe
        copy LICENSE .\dist\LICENSE
        cd dist
        tar -acf windows.zip mcsvdl.exe LICENSE
      

    - name: Upload Windows binary
      uses: actions/upload-artifact@v4
      with:
        name: windows.zip
        path: dist/windows.zip
  release:
    needs: [build-linux, build-win]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/stable')

    steps:
    - name: Download Linux binary
      uses: actions/download-artifact@v4
      with:
        name: linux.tar
        path: ./dist

    - name: Download Windows binary
      uses: actions/download-artifact@v4
      with:
        name: windows.zip
        path: ./dist

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: "Release v1.0.${{ github.run_number }}"
        files: |
          dist/windows.zip
          dist/linux.tar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


